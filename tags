!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!JavaScript	C,constant	/constants/
!_TAG_KIND_DESCRIPTION!JavaScript	G,getter	/getters/
!_TAG_KIND_DESCRIPTION!JavaScript	M,field	/fields/
!_TAG_KIND_DESCRIPTION!JavaScript	S,setter	/setters/
!_TAG_KIND_DESCRIPTION!JavaScript	c,class	/classes/
!_TAG_KIND_DESCRIPTION!JavaScript	f,function	/functions/
!_TAG_KIND_DESCRIPTION!JavaScript	g,generator	/generators/
!_TAG_KIND_DESCRIPTION!JavaScript	m,method	/methods/
!_TAG_KIND_DESCRIPTION!JavaScript	p,property	/properties/
!_TAG_KIND_DESCRIPTION!JavaScript	v,variable	/global variables/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!JavaScript	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/srv/http/projects/algorithmique/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	/p6.0.20221218.0/
carre	exercices/ex1.4.js	/^function carre (value) {$/;"	f
compNumbers	exercices/ex1.4.js	/^function compNumbers (a, b) {$/;"	f
isTriangleRectangle	exercices/ex1.4.js	/^function isTriangleRectangle (sides) {$/;"	f
isTriangleRectangle	exercices/ex1.4.js	/^module.exports = { isTriangleRectangle };$/;"	M
max	exercices/ex1.5.js	/^function max(number1, number2) {$/;"	f
max	exercices/ex1.5.js	/^module.exports = { max, max3, max3v2 };$/;"	M
max3	exercices/ex1.5.js	/^function max3(number1, number2, number3) {$/;"	f
max3v2	exercices/ex1.5.js	/^function max3v2(number1, number2, number3) {$/;"	f
nonRectangle	exercices/exercices.test.js	/^            nonRectangle:[12, 3, 32],$/;"	p	variable:triangle
rectangle	exercices/exercices.test.js	/^            rectangle: [8, 10, 6],$/;"	p	variable:triangle
result	exercices/exercices.test.js	/^            const result = isTriangleRectangle(triangle.nonRectangle);$/;"	C
result	exercices/exercices.test.js	/^            const result = isTriangleRectangle(triangle.rectangle);$/;"	C
triangle	exercices/exercices.test.js	/^        const triangle = {$/;"	v
